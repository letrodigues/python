import os
import warnings
import pysftp
import shutil
from datetime import datetime

# Desativa os avisos de UserWarning
warnings.filterwarnings("ignore", category=UserWarning)

def upload_file_to_sftp(sftp_host, sftp_port, sftp_username, sftp_password, remote_dir, local_file_path):
    """Faz upload de um arquivo local para um servidor SFTP."""
    try:
        cnopts = pysftp.CnOpts()
        cnopts.hostkeys = None  # Desativa verificação de host key

        with pysftp.Connection(sftp_host, username=sftp_username, password=sftp_password, port=sftp_port, cnopts=cnopts) as sftp:
            sftp.cwd(remote_dir)
            sftp.put(local_file_path)
            print(f"Arquivo '{local_file_path}' enviado para '{remote_dir}' com sucesso.")
        return True
    except Exception as e:
        print(f"Erro ao enviar arquivo: {e}")
        return False

def verificar_arquivo(pasta):
    """Verifica se há arquivos na pasta e retorna o nome do primeiro encontrado."""
    for arquivo in os.listdir(pasta):
        caminho_arquivo = os.path.join(pasta, arquivo)
        if os.path.isfile(caminho_arquivo):
            print(f"Arquivo encontrado: {arquivo}")
            return arquivo
    return None

if __name__ == "__main__":
    local_upload_dir = r'C:\MeusArquivos\UploadSFTP'
    arquivo = verificar_arquivo(local_upload_dir)

    if arquivo is not None:
        sucesso = upload_file_to_sftp(
            sftp_host='sftp.exemplo.com',
            sftp_port=22,
            sftp_username='usuario_teste',
            sftp_password='senha_segura123',
            remote_dir='/diretorio/remoto',
            local_file_path=os.path.join(local_upload_dir, arquivo)
        )
        if sucesso:
            print("Processo finalizado com sucesso.")
        else:
            print("Falha no envio do arquivo.")
    else:
        print("Nenhum arquivo encontrado para envio.")
